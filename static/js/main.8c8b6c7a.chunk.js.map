{"version":3,"sources":["js/context/Reducer.js","js/context/Context.js","js/shaders/FragmentShader.js","js/components/Flower.js","js/shaders/GlitchedFragmentShader.js","js/shaders/VertexShader.js","js/Scene.js","js/helpers/Globals.js","js/functions/PlayIcon.js","audio/flowers-no-1.ogg","audio/flowers-no-1.mid","js/Audio.js","js/App.js","index.js"],"names":["Reducer","state","action","type","audioIsPlaying","payload","currentNote","notes","Error","initialState","Context","createContext","GlobalContextProvider","children","useReducer","dispatch","Provider","value","updateIsAudioPlaying","playing","updateNotes","newNote","updateCurrentNote","FragmentShader","Flower","props","mesh","useRef","mesh2","useState","canvasClear","setCanvasClear","currentShader","setCurrentShader","glichtedMode","setGlichtedMode","renderTargetA","useFBO","window","innerWidth","innerHeight","renderTargetB","magicScene","THREE","flowerPointer","x","y","grow","uniforms","useMemo","u_stop_time","u_point","u_moving","u_speed","u_stop_randomizer","Math","random","u_clean","u_ratio","u_texture","useFrame","clock","gl","scene","camera","current","material","texture","getDelta","setRenderTarget","render","map","tmp","useEffect","clearCanvas","setTimeout","canGlitch","length","ref","args","fragmentShader","vertexShader","wireframe","createPortal","Scene","useContext","position","orthographic","fallback","p5","PlayIcon","id","className","xmlns","height","viewBox","width","d","Audio","animation","sketchRef","Sketch","p","canvas","canvasWidth","canvasHeight","audioLoaded","player","PPQ","loadMidi","Midi","fromUrl","midi","then","result","noteSet1","tracks","scheduleCueSet","document","getElementById","classList","add","remove","preload","song","loadSound","audio","onended","logCredits","noteSet","callbackName","poly","lastTicks","currentCue","i","note","ticks","time","addCue","setup","createCanvas","noLoop","draw","isPlaying","gridVersion","executeCueSet1","console","log","cue","mousePressed","creditsLogged","parseInt","currentTime","buffer","duration","stop","reset","updateCanvasDimensions","resizeCanvas","attachEvent","addEventListener","onClick","pause","addClass","play","App","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.8c8b6c7a.chunk.js","sourcesContent":["export default function Reducer(state, action) {\n    switch (action.type) {\n        case \"UPDATE_AUDIO_STATE\": {\n            return {\n                ...state,\n                audioIsPlaying: action.payload\n            }\n        }\n         case \"UPDATE_CURRENT_NOTE\": {\n            return {\n                ...state,\n                currentNote: action.payload\n            }\n        }\n        case \"UPDATE_NOTES\": {\n            return {\n                ...state,\n                notes: [...state.notes, action.payload]\n            }\n        }\n        default:\n            throw new Error('Action type does not exist!')\n    }\n}","import React, { createContext, useReducer } from 'react';\n\nimport Reducer from \"./Reducer\";\n\nconst initialState = {\n    audioIsPlaying: false,\n    notes: [],  \n    currentNote: 0\n}\n\nexport const Context = createContext(initialState);\n\nexport const GlobalContextProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(Reducer, initialState);\n\n    const updateIsAudioPlaying = (playing) => {\n        dispatch({ type: \"UPDATE_AUDIO_STATE\", payload: playing });\n    }\n\n    const updateNotes = (newNote) => {\n        dispatch({ type: \"UPDATE_NOTES\", payload: newNote });\n    }\n\n    const updateCurrentNote = (newNote) => {\n        dispatch({ type: \"UPDATE_CURRENT_NOTE\", payload: newNote });\n    }\n\n    return <Context.Provider\n        value={\n            {\n                audioIsPlaying: state.audioIsPlaying,\n                updateIsAudioPlaying,\n                notes: state.notes,\n                updateNotes,\n                currentNote: state.currentNote,\n                updateCurrentNote,\n            }\n        }\n    >\n        {children}\n    </Context.Provider>\n};\n","const FragmentShader = `\r\n#define PI 3.14159265359\r\n\r\nuniform float u_ratio;\r\nuniform float u_moving;\r\nuniform float u_stop_time;\r\nuniform float u_speed;\r\nuniform vec2 u_stop_randomizer;\r\nuniform float u_clean;\r\nuniform vec2 u_point;\r\nuniform sampler2D u_texture;\r\nvarying vec2 vUv;\r\n\r\nfloat rand(vec2 n) {\r\n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\r\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\r\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\r\nfloat snoise(vec2 v) {\r\n    const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439);\r\n    vec2 i = floor(v + dot(v, C.yy));\r\n    vec2 x0 = v - i + dot(i, C.xx);\r\n    vec2 i1;\r\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\r\n    vec4 x12 = x0.xyxy + C.xxzz;\r\n    x12.xy -= i1;\r\n    i = mod289(i);\r\n    vec3 p = permute(permute(i.y + vec3(0.0, i1.y, 1.0)) + i.x + vec3(0.0, i1.x, 1.0));\r\n    vec3 m = max(0.5 - vec3(dot(x0, x0), dot(x12.xy, x12.xy), dot(x12.zw, x12.zw)), 0.0);\r\n    m = m*m;\r\n    m = m*m;\r\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\r\n    vec3 h = abs(x) - 0.5;\r\n    vec3 ox = floor(x + 0.5);\r\n    vec3 a0 = x - ox;\r\n    m *= 1.79284291400159 - 0.85373472095314 * (a0*a0 + h*h);\r\n    vec3 g;\r\n    g.x = a0.x * x0.x + h.x * x0.y;\r\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\r\n    return 130.0 * dot(m, g);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n    const vec2 d = vec2(0., 1.);\r\n    vec2 b = floor(n), f = smoothstep(vec2(0.), vec2(1.), fract(n));\r\n    return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat get_stem_shape(vec2 _p, vec2 _uv, float _w, float _angle) {\r\n\r\n    float x_offset = _p.y * sin(_angle);\r\n    x_offset *= pow(3. * _uv.y, 2.);\r\n    _p.x -= x_offset;\r\n\r\n    // add horizontal noise to the cursor coordinale\r\n    float noise_power = .5;\r\n    float cursor_horizontal_noise = noise_power * snoise(2. * _uv * u_stop_randomizer[0]);\r\n    cursor_horizontal_noise *= pow(dot(_p.y, _p.y), .6);// moise to be zero at cursor\r\n    cursor_horizontal_noise *= pow(dot(_uv.y, _uv.y), .3);// moise to be zero at bottom\r\n    _p.x += cursor_horizontal_noise;\r\n\r\n    // vertical line through the cursor point (_p.x)\r\n    float left = smoothstep(-_w, 0., _p.x);\r\n    float right = 1. - smoothstep(0., _w, _p.x);\r\n    float stem_shape = left * right;\r\n\r\n    // make it grow + don't go up to the cursor point\r\n    float grow_time = 1. - smoothstep(0., .2, u_stop_time);\r\n    float stem_top_mask = smoothstep(0., pow(grow_time, .5), .03 -_p.y);\r\n    stem_shape *= stem_top_mask;\r\n\r\n    // stop drawing once done\r\n    stem_shape *= (1. - step(.17, u_stop_time));\r\n\r\n    return stem_shape;\r\n}\r\n\r\nfloat flower_shape(vec2 _point, float _size, float _outline, float _tickniess, float _noise, float _angle_offset) {\r\n    float random_by_uv = noise(vUv);\r\n\r\n    float petals_thickness = .5;\r\n    float petals_number = 5. + floor(u_stop_randomizer[0] * 4.);\r\n    float angle_animated_offset = .7 * (random_by_uv - .5) / (1. + 30. * u_stop_time);\r\n    float flower_angle = atan(_point.y, _point.x) - angle_animated_offset;\r\n    float flower_sectoral_shape = abs(sin(flower_angle * .5 * petals_number + _angle_offset)) + _tickniess * petals_thickness;\r\n\r\n    vec2 flower_size_range = vec2(2., 18.);\r\n    float flower_radial_shape = length(_point) * (flower_size_range[0] + flower_size_range[1] * u_stop_randomizer[0]);\r\n    float radius_noise = sin(flower_angle * 13. + 15. * random_by_uv);\r\n    flower_radial_shape += _noise * radius_noise;\r\n\r\n    float flower_radius_grow = 1.;\r\n\r\n    float flower_shape = 1. - smoothstep(0., _size * flower_sectoral_shape, _outline * flower_radius_grow * flower_radial_shape);\r\n    flower_shape *= (1. - u_moving);\r\n\r\n    flower_shape *= (1. - step(1., u_stop_time));\r\n\r\n    return flower_shape;\r\n}\r\n\r\nvoid main() {\r\n\r\n    vec3 base = texture2D(u_texture, vUv).rgb;\r\n    vec2 cursor = vUv - u_point.xy;\r\n    cursor.x *= u_ratio;\r\n\r\n    // ========================================\r\n    // STEM\r\n\r\n    vec2 uv = vUv;\r\n    uv.x *= u_ratio;\r\n    float angle = .5 * (u_stop_randomizer[0] - .5);\r\n    vec3 stem_color = vec3(.1 + u_stop_randomizer[0] * .6, .6, .2);\r\n    float stem_shape = get_stem_shape(cursor, uv, .003, angle);\r\n    stem_shape += get_stem_shape(cursor + vec2(0., .2 + .5 * u_stop_randomizer[0]), uv, .003, angle);\r\n    float stem_mask = 1. - get_stem_shape(cursor, uv, .004, angle);\r\n    stem_mask -= get_stem_shape(cursor + vec2(0., .2 + .5 * u_stop_randomizer[0]), uv, .004, angle);\r\n\r\n    // ========================================\r\n    // FLOWER\r\n\r\n    // flower_shape:\r\n    // - center\r\n    // - size coefficient\r\n    // - bright outline width\r\n    // - extra sectoral weight\r\n    // - noise power\r\n    // - angle offset\r\n\r\n    vec3 flower_color = vec3(.7 + u_stop_randomizer[1], .8 * u_stop_randomizer[1], 2.9 + u_stop_randomizer[0] * .6);\r\n    vec3 flower_new = flower_color * flower_shape(cursor, 1., .96, 1., .15, 0.);\r\n    vec3 flower_mask = 1. - vec3(flower_shape(cursor, 1.55, 1.07, 1., .15, 0.));\r\n    vec3 flower_mid = vec3(-.6) * flower_shape(cursor, .15, 1., 2., .1, 1.9);\r\n\r\n    vec3 color = base * flower_mask + (flower_new + flower_mid);\r\n    color *= stem_mask;\r\n    color += (stem_shape * stem_color);\r\n    color *= u_clean;\r\n    color = clamp(color, vec3(.0, .0, .15), vec3(1., 1., .4));\r\n\r\n    gl_FragColor = vec4(color, 1.);\r\n}\r\n`\r\n\r\nexport default FragmentShader;\r\n","import React, { useRef, useMemo, useEffect, useState } from \"react\";\nimport { useFrame, createPortal } from \"@react-three/fiber\";\nimport { useFBO } from '@react-three/drei';\nimport * as THREE from 'three';\n\nimport VertexShader from '../shaders/VertexShader';\nimport FragmentShader from '../shaders/FragmentShader';\nimport GlitchedFragmentShader from '../shaders/GlitchedFragmentShader';\n\nexport default function Flower(props) {\n    const { notes, currentNote  } = props;\n    const mesh = useRef();\n    const mesh2 = useRef();\n    const [canvasClear, setCanvasClear] = useState(false);\n    const [currentShader, setCurrentShader] = useState(FragmentShader);\n    const [glichtedMode, setGlichtedMode] = useState(false);\n\n    let renderTargetA = useFBO(window.innerWidth, window.innerHeight);\n    let renderTargetB = useFBO(window.innerWidth, window.innerHeight);\n\n    const magicScene = new THREE.Scene();\n\n    const flowerPointer = {\n        x: 0.5,\n        y: 0.5,\n        grow: false,\n    };\n\n\n    const uniforms = useMemo(\n        () => ({\n            u_stop_time: {type: \"f\", value: 0.},\n            u_point: {type: \"v2\", value: new THREE.Vector2(flowerPointer.x, flowerPointer.y)},\n            u_moving: {type: \"f\", value: 0.},\n            u_speed: {type: \"f\", value: 0.},\n            u_stop_randomizer: {type: \"v2\", value: new THREE.Vector2(Math.random(), Math.random())},\n            u_clean: {type: \"f\", value: 1.},\n            u_ratio: {type: \"f\", value: window.innerWidth / window.innerHeight},\n            u_texture: {type: \"t\", value: null}\n        }), [flowerPointer.x, flowerPointer.y]\n    );\n\n    useFrame((state) => {\n        const { clock, gl, scene, camera } = state;\n        mesh.current.material.uniforms.u_clean.value = canvasClear ? 0 : 1;\n        mesh.current.material.uniforms.u_point.value = new THREE.Vector2(flowerPointer.x, 1 - flowerPointer.y);\n        mesh.current.material.uniforms.u_texture.value = renderTargetA.texture;\n        mesh.current.material.uniforms.u_ratio.value = window.innerWidth / window.innerHeight;\n        if (flowerPointer.grow) {\n            mesh.current.material.uniforms.u_moving.value = 1.;\n            mesh.current.material.uniforms.u_stop_randomizer.value = new THREE.Vector2(Math.random(), Math.random());\n            mesh.current.material.uniforms.u_stop_time.value = 0.;\n            flowerPointer.grow = false;\n        } else {\n            mesh.current.material.uniforms.u_moving.value = 0.;\n        }\n        mesh.current.material.uniforms.u_stop_time.value += clock.getDelta();\n\n        gl.setRenderTarget(renderTargetB);\n        gl.render(scene, camera);\n        mesh2.current.material.map = renderTargetB.texture;\n        gl.setRenderTarget(null);\n        gl.render(magicScene, camera);\n\n        let tmp = renderTargetA;\n        renderTargetA = renderTargetB;\n        renderTargetB = tmp;\n    });\n\n    useEffect(\n        () => {\n            if(currentNote.clearCanvas) {\n                setCanvasClear(true);\n\n                setTimeout(() => {\n                    setCanvasClear(false);\n                }, 50);\n            }\n\n            if(currentNote.canGlitch) {\n                setGlichtedMode(!glichtedMode);\n                if(glichtedMode) {\n                    setCurrentShader(GlitchedFragmentShader);\n                }\n                else {\n                    setCurrentShader(FragmentShader);\n                }\n            }\n\n            if(notes.length) {\n                flowerPointer.x = Math.random();\n                flowerPointer.y = Math.random() * (0.9 - 0.25) + 0.25;\n                flowerPointer.grow = true;\n            }\n        }, \n        [notes, currentNote]\n    );\n\n\n    return (\n        <>\n            <mesh ref={mesh}>\n                <planeGeometry args={[2, 2]} />\n                <shaderMaterial\n                    fragmentShader={currentShader}\n                    vertexShader={VertexShader}\n                    uniforms={uniforms}\n                    wireframe={false}\n                />\n            </mesh>\n            {createPortal(\n                <mesh ref={mesh2}>\n                    <planeGeometry args={[2, 2]} />\n                    <meshBasicMaterial\n                    />\n                </mesh>,\n                magicScene\n            )}\n        </>\n    );\n};","const GlitchedFragmentShader = `\r\n#define PI 3.14159265359\r\n\r\nuniform float u_ratio;\r\nuniform float u_moving;\r\nuniform float u_stop_time;\r\nuniform float u_speed;\r\nuniform vec2 u_stop_randomizer;\r\nuniform float u_clean;\r\nuniform vec2 u_point;\r\nuniform sampler2D u_texture;\r\nvarying vec2 vUv;\r\n\r\nfloat rand(vec2 n) {\r\n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\r\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\r\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\r\nfloat snoise(vec2 v) {\r\n    const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439);\r\n    vec2 i = floor(v + dot(v, C.yy));\r\n    vec2 x0 = v - i + dot(i, C.xx);\r\n    vec2 i1;\r\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\r\n    vec4 x12 = x0.xyxy + C.xxzz;\r\n    x12.xy -= i1;\r\n    i = mod289(i);\r\n    vec3 p = permute(permute(i.y + vec3(0.0, i1.y, 1.0)) + i.x + vec3(0.0, i1.x, 1.0));\r\n    vec3 m = max(0.5 - vec3(dot(x0, x0), dot(x12.xy, x12.xy), dot(x12.zw, x12.zw)), 0.0);\r\n    m = m*m;\r\n    m = m*m;\r\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\r\n    vec3 h = abs(x) - 0.5;\r\n    vec3 ox = floor(x + 0.5);\r\n    vec3 a0 = x - ox;\r\n    m *= 1.79284291400159 - 0.85373472095314 * (a0*a0 + h*h);\r\n    vec3 g;\r\n    g.x = a0.x * x0.x + h.x * x0.y;\r\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\r\n    return 130.0 * dot(m, g);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n    const vec2 d = vec2(0., 1.);\r\n    vec2 b = floor(n), f = smoothstep(vec2(0.), vec2(1.), fract(n));\r\n    return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat get_stem_shape(vec2 _p, vec2 _uv, float _w, float _angle) {\r\n\r\n    float x_offset = _p.y * sin(_angle);\r\n    x_offset *= pow(3. * _uv.y, 2.);\r\n    _p.x -= x_offset;\r\n\r\n    // add horizontal noise to the cursor coordinale\r\n    float noise_power = .5;\r\n    float cursor_horizontal_noise = noise_power * snoise(2. * _uv * u_stop_randomizer[0]);\r\n    cursor_horizontal_noise *= pow(dot(_p.y, _p.y), .6);// moise to be zero at cursor\r\n    cursor_horizontal_noise *= pow(dot(_uv.y, _uv.y), .3);// moise to be zero at bottom\r\n    _p.x += cursor_horizontal_noise;\r\n\r\n    // vertical line through the cursor point (_p.x)\r\n    float left = smoothstep(-_w, 0., _p.x);\r\n    float right = 1. - smoothstep(0., _w, _p.x);\r\n    float stem_shape = left * right;\r\n\r\n    // make it grow + don't go up to the cursor point\r\n    float grow_time = 1. - smoothstep(0., .2, u_stop_time);\r\n    float stem_top_mask = smoothstep(0., pow(grow_time, .5), .03 -_p.y);\r\n    stem_shape *= stem_top_mask;\r\n\r\n    // stop drawing once done\r\n    stem_shape *= (1. - step(.17, u_stop_time));\r\n\r\n    return stem_shape;\r\n}\r\n\r\nfloat flower_shape(vec2 _point, float _size, float _outline, float _tickniess, float _noise, float _angle_offset) {\r\n    float random_by_uv = noise(vUv);\r\n\r\n    float petals_thickness = .5;\r\n    float petals_number = 5. + floor(u_stop_randomizer[0] * 4.);\r\n    float angle_animated_offset = .7 * (random_by_uv - .5) / (1. + 30. * u_stop_time);\r\n    float flower_angle = atan(_point.y, _point.x) - angle_animated_offset;\r\n    float flower_sectoral_shape = abs(sin(flower_angle * .5 * petals_number + _angle_offset)) + _tickniess * petals_thickness;\r\n\r\n    vec2 flower_size_range = vec2(2., 18.);\r\n    float flower_radial_shape = length(_point) * (flower_size_range[0] + flower_size_range[1] * u_stop_randomizer[0]);\r\n    float radius_noise = sin(flower_angle * 13. + 15. * random_by_uv);\r\n    flower_radial_shape += _noise * radius_noise;\r\n\r\n    float flower_radius_grow = 1.;\r\n    flower_radius_grow = 1. / flower_radius_grow;\r\n\r\n    float flower_shape = 1. - smoothstep(0., _size * flower_sectoral_shape, _outline * flower_radius_grow * flower_radial_shape);\r\n    flower_shape *= (1. - u_moving);\r\n\r\n    flower_shape *= (1. - step(1., u_stop_time));\r\n\r\n    return flower_shape;\r\n}\r\n\r\nvoid main() {\r\n    vec2 gridUV = vec2(sin(vUv.x * 3.0) / 3.0, sin(vUv.y * 3.0) / 3.0);\r\n    vec3 base = texture2D(u_texture, gridUV).rgb;\r\n    vec2 cursor = vUv - u_point.xy;\r\n    cursor.x *= u_ratio;\r\n\r\n    // ========================================\r\n    // STEM\r\n\r\n    vec2 uv = vUv;\r\n    uv.x *= u_ratio;\r\n    float angle = .5 * (u_stop_randomizer[0] - .5);\r\n    vec3 stem_color = vec3(.1 + u_stop_randomizer[0] * .6, .6, .2);\r\n    float stem_shape = get_stem_shape(cursor, uv, .003, angle);\r\n    stem_shape += get_stem_shape(cursor + vec2(0., .2 + .5 * u_stop_randomizer[0]), uv, .003, angle);\r\n    float stem_mask = 1. - get_stem_shape(cursor, uv, .004, angle);\r\n    stem_mask -= get_stem_shape(cursor + vec2(0., .2 + .5 * u_stop_randomizer[0]), uv, .004, angle);\r\n\r\n    // ========================================\r\n    // FLOWER\r\n\r\n    // flower_shape:\r\n    // - center\r\n    // - size coefficient\r\n    // - bright outline width\r\n    // - extra sectoral weight\r\n    // - noise power\r\n    // - angle offset\r\n\r\n    vec3 flower_color = vec3(.7 + u_stop_randomizer[1], .8 * u_stop_randomizer[1], 2.9 + u_stop_randomizer[0] * .6);\r\n    vec3 flower_new = flower_color * flower_shape(cursor, 1., .96, 1., .15, 0.);\r\n    vec3 flower_mask = 1. - vec3(flower_shape(cursor, 1.55, 1.07, 1., .15, 0.));\r\n    vec3 flower_mid = vec3(-.6) * flower_shape(cursor, .15, 1., 2., .1, 1.9);\r\n\r\n    vec3 color = base * flower_mask + (flower_new + flower_mid);\r\n    color *= stem_mask;\r\n    color += (stem_shape * stem_color);\r\n    color *= u_clean;\r\n    color = clamp(color, vec3(.0, .0, .15), vec3(1., 1., .4));\r\n\r\n    gl_FragColor = vec4(color, 1.);\r\n}\r\n`\r\n\r\nexport default GlitchedFragmentShader;\r\n","const VertexShader = `\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n    gl_Position = vec4(position, 1.);\r\n}\r\n`\r\n\r\nexport default VertexShader;\r\n","import React, { Suspense, useContext } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Context } from \"./context/Context\";\nimport Flower from './components/Flower'\n\n/**\n * https://blog.maximeheckel.com/posts/the-study-of-shaders-with-react-three-fiber/\n * https://blog.maximeheckel.com/posts/beautiful-and-mind-bending-effects-with-webgl-render-targets/\n * https://codepen.io/ksenia-k/pen/RwqrxBG?editors=1010\n * https://codepen.io/ksenia-k/pen/poOMpzx\n * https://codepen.io/mdusmanansari/pen/BamepLe\n * \n */\nexport default function Scene() {\n    const { notes, currentNote } = useContext(Context);\n\n    return (\n        <Canvas camera={{ position: [1.0, 1.0, 1.0] }} orthographic={true}>\n            <Suspense fallback='loading...'>\n                <Flower notes={notes} currentNote={currentNote} />\n            </Suspense>\n        </Canvas>\n    );\n}","// p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\n// https://github.com/processing/p5.js-sound/issues/512\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","export default function PlayIcon() {\n    return (\n        <svg id=\"play-icon\" className='play-icon' xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path className='play-icon__play' d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n            <path className='play-icon__pause' xmlns=\"http://www.w3.org/2000/svg\" d=\"M9 16h2V8H9Zm4 0h2V8h-2Zm-1 6q-2.075 0-3.9-.788-1.825-.787-3.175-2.137-1.35-1.35-2.137-3.175Q2 14.075 2 12t.788-3.9q.787-1.825 2.137-3.175 1.35-1.35 3.175-2.138Q9.925 2 12 2t3.9.787q1.825.788 3.175 2.138 1.35 1.35 2.137 3.175Q22 9.925 22 12t-.788 3.9q-.787 1.825-2.137 3.175-1.35 1.35-3.175 2.137Q14.075 22 12 22Zm0-2q3.35 0 5.675-2.325Q20 15.35 20 12q0-3.35-2.325-5.675Q15.35 4 12 4 8.65 4 6.325 6.325 4 8.65 4 12q0 3.35 2.325 5.675Q8.65 20 12 20Zm0-8Z\"/>\n        </svg>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/flowers-no-1.b3989e78.ogg\";","export default __webpack_public_path__ + \"static/media/flowers-no-1.f38739f9.mid\";","import React, { useRef, useEffect, useContext } from \"react\";\nimport \"./helpers/Globals\";\nimport \"p5/lib/addons/p5.sound\";\nimport * as p5 from \"p5\";\nimport { Midi } from '@tonejs/midi'\nimport PlayIcon from './functions/PlayIcon.js';\n\nimport audio from \"../audio/flowers-no-1.ogg\";\nimport midi from \"../audio/flowers-no-1.mid\";\nimport { Context } from \"./context/Context.js\";\n\nconst Audio = () => {\n    const animation = useRef();\n    const sketchRef = useRef();\n    const { updateNotes, updateCurrentNote } = useContext(Context);\n\n    const Sketch = p => {\n\n        p.canvas = null;\n\n        p.canvasWidth = window.innerWidth;\n\n        p.canvasHeight = window.innerHeight;\n\n        p.audioLoaded = false;\n\n        p.player = null;\n\n        p.PPQ = 3840 * 4;\n\n        p.loadMidi = () => {\n            Midi.fromUrl(midi).then(\n                function(result) {\n                    const noteSet1 = result.tracks[0].notes; // Synth 1\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1');\n                    p.audioLoaded = true;\n                    document.getElementById(\"loader\").classList.add(\"loading--complete\");\n                    document.getElementById(\"play-icon\").classList.remove(\"fade-out\");\n                }\n            );\n            \n        }\n\n        p.preload = () => {\n            p.song = p.loadSound(audio, p.loadMidi);\n            p.song.onended(p.logCredits);\n        }\n\n        p.scheduleCueSet = (noteSet, callbackName, poly = false)  => {\n            let lastTicks = -1,\n                currentCue = 1;\n            for (let i = 0; i < noteSet.length; i++) {\n                const note = noteSet[i],\n                    { ticks, time } = note;\n                if(ticks !== lastTicks || poly){\n                    note.currentCue = currentCue;\n                    p.song.addCue(time, p[callbackName], note);\n                    lastTicks = ticks;\n                    currentCue++;\n                }\n            }\n        } \n\n\n        p.setup = () => {\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.noLoop()\n        }\n\n        p.draw = () => {\n            if(p.audioLoaded && p.song.isPlaying()){\n\n            }\n        }\n\n        p.gridVersion = 1;\n\n        p.executeCueSet1 = (note) => {\n            const { currentCue, ticks } = note;\n            note.clearCanvas = false;\n            note.canGlitch = false;\n            console.log(currentCue);\n            if(ticks % 245760 === 11520 || currentCue === 140){\n                if(currentCue < 140) {\n                    note.clearCanvas = true;\n                }\n                note.canGlitch = true;\n            }\n            updateCurrentNote(note);\n            updateNotes(\n                {\n                    cue: currentCue\n                }\n            );\n        }\n\n        p.mousePressed = () => {\n            \n        }\n\n        p.creditsLogged = false;\n\n        p.logCredits = () => {\n            if (\n                !p.creditsLogged &&\n                parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\n            ) {\n                p.creditsLogged = true;\n                    console.log(\n                    \"Music By: http://labcat.nz/\",\n                    \"\\n\",\n                    \"Animation By: https://github.com/LABCAT/\"\n                );\n                p.song.stop();\n            }\n        };\n\n        p.reset = () => {\n\n        }\n\n        p.updateCanvasDimensions = () => {\n            p.canvasWidth = window.innerWidth;\n            p.canvasHeight = window.innerHeight;\n            p.canvas = p.resizeCanvas(p.canvasWidth, p.canvasHeight);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent(\n                'onresize',\n                function () {\n                    p.updateCanvasDimensions();\n                }\n            );\n        }\n        else if (window.addEventListener) {\n            window.addEventListener(\n                'resize',\n                function () {\n                    p.updateCanvasDimensions();\n                },\n                true\n            );\n        }\n        else {\n            //The browser does not support Javascript event binding\n        }\n    };\n\n    const playHandler = () => {\n        \n        if(animation.current) {\n            if(animation.current.audioLoaded){\n                if (animation.current.song.isPlaying()) {\n                    animation.current.song.pause();\n                    document.getElementById(\"play-icon\").classList.remove(\"play-icon--playing\");\n                } else {\n                    if (parseInt(animation.current.song.currentTime()) >= parseInt(animation.current.song.buffer.duration)) {\n                        animation.current.reset();\n                    }\n                    document.getElementById(\"play-icon\").classList.add(\"play-icon--playing\");\n                    animation.current.canvas.addClass(\"fade-in\");\n                    animation.current.song.play();\n                }\n            }\n        }\n    }\n\n    useEffect(() => {\n        if(!animation.current) {\n            animation.current = new p5(Sketch, sketchRef.current);\n        }\n    });\n\n\n    return (\n        <div ref={sketchRef}>\n            <button onClick={playHandler} id=\"play-button\">\n                <PlayIcon  />\n            </button>\n        </div>\n    );\n};\n\nexport default Audio;\n","import Scene from './Scene.js'\nimport Audio from './Audio.js'\nimport { GlobalContextProvider } from './context/Context';\n\nexport default function App() {\n  return (\n    <GlobalContextProvider>\n      <Scene />\n      <Audio />\n    </GlobalContextProvider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/App';\nimport './css/build.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}